name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  BUILD_PATH: "." # default value when not using subfolders
on:
  push:
    branches:
      - main
jobs:
  Get-Next-Challenge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get last challenge deployed
        outputs:
          next: ${{ steps.next_challenge.outputs.next }}
        steps:
          - id: next_challenge
            run: |
              NEXT=$(expr $(cat LAST) + 1)
              MAX_CHALLENGES=$(find challenges -mindepth 1 -maxdepth 1 -type d | wc -l | tr -s " "| sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
              if [ "$NEXT" -gt "$MAX_CHALLENGES" ]; then
                NEXT=$(expr $NEXT - $MAX_CHALLENGES)
              fi
              echo "NEXT = $NEXT"
              echo "MAX_CHALLENGES = $MAX_CHALLENGES"
              echo "next=$NEXT" >> "$GITHUB_OUTPUT"

  Setup-Dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.6.3
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache-dependency-path: ${{ env.BUILD_PATH }}/pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install
        working-directory: ${{ env.BUILD_PATH }}
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
  Deploy-Production:
    runs-on: ubuntu-latest
    environment: Vercel
    needs: Get-Next-Challenge
    steps:
      - env:
          NEXT: ${{needs.Get-Next-Challenge.outputs.next}}
      - name: Copy New Challenge
        run: cp ./challenges/"${NEXT}"/test.js ./src/challenge/index.js
      - name: Update Last Challenge deployed
        run: echo "${NEXT}" > last_deployed.txt
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
